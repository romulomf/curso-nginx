server {
	listen 80;
	server_name localhost;

	location / {
		root /usr/share/nginx/html;
		index index.html index.htm;
	}

	# a / no fim do endereço de proxy_pass é de fundamental importância.
	# isto por que ela faz com que o caminho relativo a partir do location
	# seja o que vem após o endereço do próprio location.
	#
	# fica mais fácil de entender se visualizarmos um exemplo. Caso estivesse
	# sem a barra no final (depois de :8001) digamos, e tentássemos acessar o
	# endereço localhost/service1/foo, o que seria encaminhado para o servidor
	# que está executando em http://localhost:8001 é todo o caminho incluindo
	# o location, que ficaria então no fim das contas o endereço final sendo o
	# http://localhost:8001/service1/foo.
	#
	# a questão é que /service1 é apenas um alias para o servidor, e não é de
	# interesse, mandar essa parte da url, mas sim apenas o que vem depois dela.
	# aí entram entra em cena o trabalho da / no final. com ela, o que vai ser
	# enviado é o caminho a partir do location /service1, mas sem enviar o próprio
	# location. O resultado da configuração utilizando a / é então que o caminho
	# no servidor de destino é http://localhost:8001/foo (sem o /service1).

	location /service1 {
		proxy_pass http://localhost:8001/;
	}

	location /service2 {
		proxy_pass http://localhost:8002/;
	}

	error_page   500 502 503 504  /50x.html;

	location = /50x.html {
		root   /usr/share/nginx/html;
	}
}

# um upstream é um grupo de servidores, que podem ser referenciados.
# é possível usar esse nome do upstream para fazer configurações que
# são poderosas como criar um conjunto de servidores que integra um
# balanceador de carga.

upstream servicos {
	server localhost:8001;
	server localhost:8002;
}

server {
	listen *:8000;
	server_name localhost;

	location / {
		# isto é uma simples implementação de um balanceador de carga.
		# o proxy é feito não para um servidor específico, mas sim para
		# um grupo de servidores, ou como o nginx chama, um upstream.
		# desta forma quem vai atender essa requisição vai ser qualquer
		# um dos servidores que integra o upstream referenciado aqui.

		proxy_pass http://servicos;
		proxy_set_header X-Real-IP $remote_addr;
	}
}

server {
	listen *:8001;
	server_name localhost;

	access_log /var/log/nginx/service1.log custom;

	location / {
		root /usr/share/nginx/static/service1;
	}
}

server {
	listen *:8002;
	server_name localhost;

	access_log /var/log/nginx/service2.log custom;

	location / {
		root /usr/share/nginx/static/service2;
	}
}